name: .NET Core

on:
  push:
    tags:
    - '*'

jobs:
  publish_linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Extract Tag version
      id: tag
      run: echo "::set-output name=version::$(echo ${{ github.ref }} | sed -e 's/refs\/tags\///')"
    - name: Test TAG
      run: echo ${{ steps.tag.outputs.version }}
    - name: Install dependencies
      run: dotnet restore
    - name: Publish Linux
      run: dotnet publish -c Release -r linux-x64 -p:PublishSingleFile=true -p:PublishReadyToRun=true
    - name: Publish Windows
      run: dotnet publish -c Release -r win10-x64 -p:PublishSingleFile=true -p:PublishReadyToRun=false
    - name: Create Zip File - Linux
      uses: montudor/action-zip@v0.1.0
      with: 
        args: zip -qq -r ./ExtremeFeedbackDeviceController-${{ steps.tag.outputs.version }}-linux-x64.zip ./ExtremeFeedbackDeviceController/bin/Release/netcoreapp3.1/linux-x64/publish
    - name: Create Zip File - Windows
      uses: montudor/action-zip@v0.1.0
      with: 
        args: zip -qq -r ./ExtremeFeedbackDeviceController-${{ steps.tag.outputs.version }}-win10-x64.zip ./ExtremeFeedbackDeviceController/bin/Release/netcoreapp3.1/win10-x64/publish
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset - linux
      id: upload-release-asset-linux 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./ExtremeFeedbackDeviceController-${{ steps.tag.outputs.version }}-linux-x64.zip
        asset_name: ExtremeFeedbackDeviceController-${{ steps.tag.outputs.version }}}-linux-x64.zip
        asset_content_type: application/zip
    - name: Upload Release Asset - windows
      id: upload-release-asset-win
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./ExtremeFeedbackDeviceController-${{ steps.tag.outputs.version }}-win10-x64.zip
        asset_name: ExtremeFeedbackDeviceController-${{ steps.tag.outputs.version }}-win10-x64.zip
        asset_content_type: application/zip
  
  
